package br.com.barcadero.commons.tests;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Date;

import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import br.com.barcadero.commons.util.HandleDateHour;
import br.com.barcadero.commons.util.HandleFiles;

public class TestUtil {

	@Test
	public void decoder() {
		String valueBase64 = "PENGZT48aW5mQ0ZlIElkPSJDRmUzNTE2MDYwODcyMzIxODAwMDE4NjU5OTAwMDAyNTkxMDAwNDg5NjI4MjcwNSIgdmVyc2FvPSIwLjA2IiB2ZXJzYW9EYWRvc0VudD0iMC4wNiIgdmVyc2FvU0I9IjAxMDEwMSI+PGlkZT48Y1VGPjM1PC9jVUY+PGNORj42MjgyNzA8L2NORj48bW9kPjU5PC9tb2Q+PG5zZXJpZVNBVD45MDAwMDI1OTE8L25zZXJpZVNBVD48bkNGZT4wMDA0ODk8L25DRmU+PGRFbWk+MjAxNjA2MTA8L2RFbWk+PGhFbWk+MTE0MzQ0PC9oRW1pPjxjRFY+NTwvY0RWPjx0cEFtYj4yPC90cEFtYj48Q05QSj4xNjcxNjExNDAwMDE3MjwvQ05QSj48c2lnbkFDPlNHUi1TQVQgU0lTVEVNQSBERSBHRVNUQU8gRSBSRVRBR1VBUkRBIERPIFNBVDwvc2lnbkFDPjxhc3NpbmF0dXJhUVJDT0RFPnppb1VOd0RDYzJ4U2t6eHpBSGtDcXR3U1R0Ri9QZkE5VnpuYmFTOGFhRkZrWm5RNWZ2YW9XVkpFOUxmTGREc0ZSL2gyVFZEUzdOSUxrTlh6YWdVV0tQWm9XL3p4dWVjcmFrOXQ0S1dPN21QaTZINlVhY3FVM2tpWUJsYUVRZXBUVXFRcko4VVNubmR6b1BYUm0razBERStsdkh3MUI0cHREcm5xQXhhRnB2V2wwcW4yNFhtampxTGw0OTVFR3hJRDU5K2x1cERUbVRoTnBMM3dwNzlNZTg3TnRZRGtFR0FYMzdlNGo0RERwcmFwNHZGdEsxL2YydEFyZDM2c0doQzJaQ1JyL2JwYVArWkEza3FrS1FIMkFOWnJHallDc1ZlUVVQbUFocmowcEpZQS9OMVd6WEw3UUE3Z0p0bnhqY1J6d052RHlOUXlNZWw4TmJ2elM3Ulg4Zz09PC9hc3NpbmF0dXJhUVJDT0RFPjxudW1lcm9DYWl4YT4wMDE8L251bWVyb0NhaXhhPjwvaWRlPjxlbWl0PjxDTlBKPjA4NzIzMjE4MDAwMTg2PC9DTlBKPjx4Tm9tZT5UQU5DQSBJTkZPUk1BVElDQSBFSVJFTEk8L3hOb21lPjx4RmFudD5UQU5DQTwveEZhbnQ+PGVuZGVyRW1pdD48eExncj5SVUEgRU5HRU5IRUlSTyBKT1JHRSBPTElWQTwveExncj48bnJvPjczPC9ucm8+PHhCYWlycm8+VklMQSBNQVNDT1RFPC94QmFpcnJvPjx4TXVuPlNBTyBQQVVMTzwveE11bj48Q0VQPjA0MzYyMDYwPC9DRVA+PC9lbmRlckVtaXQ+PElFPjE0OTYyNjIyNDExMzwvSUU+PElNPjEyMzQ1Njc4OTwvSU0+PGNSZWdUcmliPjM8L2NSZWdUcmliPjxjUmVnVHJpYklTU1FOPjE8L2NSZWdUcmliSVNTUU4+PGluZFJhdElTU1FOPk48L2luZFJhdElTU1FOPjwvZW1pdD48ZGVzdD48Q05QSj40NjU0MTY3MzAwMDE1MDwvQ05QSj48eE5vbWU+UkFaQU8gU09DSUFMPC94Tm9tZT48L2Rlc3Q+PGVudHJlZ2E+PHhMZ3I+TG9ncmFkb3VybzwveExncj48bnJvPjEyMzwvbnJvPjx4Q3BsPmNvbXBsZW1lbnRvPC94Q3BsPjx4QmFpcnJvPkJhaXJybzwveEJhaXJybz48eE11bj5NdW5pY2lwaW88L3hNdW4+PFVGPkNFPC9VRj48L2VudHJlZ2E+PGRldCBuSXRlbT0iMSI+PHByb2Q+PGNQcm9kPjAwOTA5ODA8L2NQcm9kPjx4UHJvZD5QUk9EIEhPTU9MT0c8L3hQcm9kPjxOQ00+MDEwMzEwMDA8L05DTT48Q0ZPUD41MTAyPC9DRk9QPjx1Q29tPlVOPC91Q29tPjxxQ29tPjEuMDAwMDwvcUNvbT48dlVuQ29tPjEwLjk5PC92VW5Db20+PHZQcm9kPjEwLjk5PC92UHJvZD48aW5kUmVncmE+QTwvaW5kUmVncmE+PHZJdGVtPjEwLjk5PC92SXRlbT48dlJhdERlc2M+MC4wMDwvdlJhdERlc2M+PHZSYXRBY3I+MC4wMDwvdlJhdEFjcj48L3Byb2Q+PGltcG9zdG8+PHZJdGVtMTI3NDE+Mi41MDwvdkl0ZW0xMjc0MT48SUNNUz48SUNNUzAwPjxPcmlnPjA8L09yaWc+PENTVD4wMDwvQ1NUPjxwSUNNUz41LjMzPC9wSUNNUz48dklDTVM+MC41OTwvdklDTVM+PC9JQ01TMDA+PC9JQ01TPjxQSVM+PFBJU0FsaXE+PENTVD4wMTwvQ1NUPjx2QkM+MTAuOTk8L3ZCQz48cFBJUz4wLjE3MDA8L3BQSVM+PHZQSVM+MS44NzwvdlBJUz48L1BJU0FsaXE+PC9QSVM+PENPRklOUz48Q09GSU5TQWxpcT48Q1NUPjAxPC9DU1Q+PHZCQz4xMC45OTwvdkJDPjxwQ09GSU5TPjAuMDkwMDwvcENPRklOUz48dkNPRklOUz4wLjk5PC92Q09GSU5TPjwvQ09GSU5TQWxpcT48L0NPRklOUz48L2ltcG9zdG8+PGluZkFkUHJvZD5JbmZvcm1hY2FvIGFkaWNpb25hbDwvaW5mQWRQcm9kPjwvZGV0Pjx0b3RhbD48SUNNU1RvdD48dklDTVM+MC41OTwvdklDTVM+PHZQcm9kPjEwLjk5PC92UHJvZD48dkRlc2M+MC4wMDwvdkRlc2M+PHZQSVM+MS44NzwvdlBJUz48dkNPRklOUz4wLjk5PC92Q09GSU5TPjx2UElTU1Q+MC4wMDwvdlBJU1NUPjx2Q09GSU5TU1Q+MC4wMDwvdkNPRklOU1NUPjx2T3V0cm8+MC4wMDwvdk91dHJvPjwvSUNNU1RvdD48dkNGZT4xMC45OTwvdkNGZT48dkNGZUxlaTEyNzQxPjEuMDU8L3ZDRmVMZWkxMjc0MT48L3RvdGFsPjxwZ3RvPjxNUD48Y01QPjAxPC9jTVA+PHZNUD4xMC45OTwvdk1QPjwvTVA+PHZUcm9jbz4wLjAwPC92VHJvY28+PC9wZ3RvPjxpbmZBZGljPjxvYnNGaXNjbyB4Q2FtcG89InhDYW1wbzEiPjx4VGV4dG8+eFRleHRvMTwveFRleHRvPjwvb2JzRmlzY28+PC9pbmZBZGljPjwvaW5mQ0ZlPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tMjAwMTAzMTUiPjwvQ2Fub25pY2FsaXphdGlvbk1ldGhvZD48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiI+PC9TaWduYXR1cmVNZXRob2Q+PFJlZmVyZW5jZSBVUkk9IiNDRmUzNTE2MDYwODcyMzIxODAwMDE4NjU5OTAwMDAyNTkxMDAwNDg5NjI4MjcwNSI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIj48L1RyYW5zZm9ybT48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tMjAwMTAzMTUiPjwvVHJhbnNmb3JtPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ij48L0RpZ2VzdE1ldGhvZD48RGlnZXN0VmFsdWU+L1M1aXpiQ3NEM3E4K21HVmJhSmt1OFhXV01IQk1RVElCTHYxRlF4dEJCaz08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+VnRKeFR4UUMzVzNNak9CSWQ2L1NCWnJKUEM5TlZsS3E3OGZZS2pTS3RlL3hYQURmdmZHVUs4NC9oQjdIQWVhZ1dEWHhkdmpsbzBDVHo4TnJrM0xyZnZ3NzZzdkVCdG10NmVDOFZubnFWMzdOMGJ5cnFzejhGUW9FdmkrK3FhcVFNUEs0aHR3YnJvWDkwVk1zQlR4S2RtbEdkUTJZYkJSME9MYk9IUG4rK1hWRzZEMzNKSDErbTFreTd4VkVUdDZ5UEVrYnVUV0J0ZFhvYTlCYUdpY3h3U3dvaGVldmNoZXNzRTZNRi85a0JnUTZyU3JHV2tKTlFpMzlyS211WUU5ZEgyZFpXRWcwNWpyZ1orOVMzajhUbkhzUHJRS3Z0WStTcnFNbGNXa2QvOGFranBNd25FWEUwS3Q0b1lzZTNScm5sWG80a1hpd2o0bVcveDhuUktNcXh3PT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUcxakNDQkw2Z0F3SUJBZ0lRTmthMjlqRVRQU2Z1TWZ2eGxOUXE1ekFOQmdrcWhraUc5dzBCQVFzRkFEQm5NUXN3Q1FZRFZRUUdFd0pDVWpFMU1ETUdBMVVFQ2hNc1UyVmpjbVYwWVhKcFlTQmtZU0JHWVhwbGJtUmhJR1J2SUVWemRHRmtieUJrWlNCVFlXOGdVR0YxYkc4eElUQWZCZ05WQkFNVEdFRkRJRk5CVkNCa1pTQlVaWE4wWlNCVFJVWkJXaUJUVURBZUZ3MHhOVEEwTWpJd01EQXdNREJhRncweU1EQTBNVGt5TXpVNU5UbGFNSUhUTVFzd0NRWURWUVFHRXdKQ1VqRVNNQkFHQTFVRUNCTUpVMEZQSUZCQlZVeFBNUkV3RHdZRFZRUUtGQWhUUlVaQldpMVRVREVQTUEwR0ExVUVDeFFHUVVNdFUwRlVNU2d3SmdZRFZRUUxGQjlCZFhSbGJuUnBZMkZrYnlCd2IzSWdRVklnVTBWR1FWb2dVMUFnVTBGVU1Sd3dHZ1lEVlFRTEZCTXhOREk1TnpFM01ETXdNVE0xTmpNeE1ESXhNUkl3RUFZRFZRUUZFd2s1TURBd01ESTFPVEV4TURBdUJnTlZCQU1USjFSQlRrTkJJRWxPUms5U1RVRlVTVU5CSUVWSlVrVk1TVG93T0RjeU16SXhPREF3TURFNE5qQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5lSm1Ebm9XSldtZHkvNkV0YXVSRE1MenZxZnlnbzJlVm16blh2L1FnL3pVdU5TNU53VUxkaGNWc2dIRjB4U3k4ZE9Ga1hPWHBUaG5YWDdES284eDJNSXFOdGtLUW5Uck9FS2J3ZGt5MHdhajdmQ2xIelBodThEOVoybyt2Um9ycmxiZ1RZRmlROG0yZzhKQWNYU3lGay9Fc1hYUm5CUE9NTktKR0hHOWxkNDkyMG56YU1WakxFbldwZVdNNUtaSnV4eWlCNUhFdnJLUXRzU3BOWHQxQUtwa2d4SGdZOC8wUGxwamp5Zjlmb2NDM2ZURDAwRzRxMEU5K0VNTGhiT0dPRlVNYVE0RzZxMDhJWXZlWHhCSGVCOVU4clIvU1JBRjB1RmxOR2gvM2ZhdUdGYjRFTmxmZjlNalpTUHhLUEtWdTlkSGZwWGdHd1FROENzV1lTTDJ0VUNBd0VBQWFPQ0FnOHdnZ0lMTUNRR0ExVWRFUVFkTUJ1Z0dRWUZZRXdCQXdPZ0VBUU9NRGczTWpNeU1UZ3dNREF4T0RZd0NRWURWUjBUQkFJd0FEQU9CZ05WSFE4QkFmOEVCQU1DQmVBd0h3WURWUjBqQkJnd0ZvQVVqamxCQUZ6eXVBWGFxRzJZdVFGR2JXNWozd0l3YXdZRFZSMGZCR1F3WWpCZ29GNmdYSVphYUhSMGNEb3ZMMkZqYzJGMExYUmxjM1JsTG1sdGNISmxibk5oYjJacFkybGhiQzVqYjIwdVluSXZjbVZ3YjNOcGRHOXlhVzh2YkdOeUwyRmpjMkYwYzJWbVlYcHpjQzloWTNOaGRITmxabUY2YzNCamNtd3VZM0pzTUhzR0ExVWRJQVIwTUhJd2NBWUpLd1lCQkFHQjdDMERNR013WVFZSUt3WUJCUVVIQWdFV1ZXaDBkSEE2THk5aFkzTmhkQzVwYlhCeVpXNXpZVzltYVdOcFlXd3VZMjl0TG1KeUwzSmxjRzl6YVhSdmNtbHZMMlJ3WXk5aFkzTmhkSE5sWm1GNmMzQXZaSEJqWDJGamMyRjBjMlZtWVhwemNDNXdaR1l3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd2dhY0dDQ3NHQVFVRkJ3RUJCSUdhTUlHWE1GOEdDQ3NHQVFVRkJ6QUNobE5vZEhSd2N6b3ZMMkZqYzJGMExYUmxjM1JsTG1sdGNISmxibk5oYjJacFkybGhiQzVqYjIwdVluSXZjbVZ3YjNOcGRHOXlhVzh2WTJWeWRHbG1hV05oWkc5ekwyRmpjMkYwTFhSbGMzUmxMbkEzWXpBMEJnZ3JCZ0VGQlFjd0FZWW9hSFIwY0RvdkwyOWpjM0F0Y0dsc2IzUXVhVzF3Y21WdWMyRnZabWxqYVdGc0xtTnZiUzVpY2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQUcwNFlxdFIrZFVmY3cra2MzNWNHdHpUd3l4WnV4TlErdUI3Q2NvNXgwM0I3OE5GZXQ0VFZqaEFWay9hNGVJKzduVUpyRjZ2L1Zxdjd6NFZyckRjV3pJVGptVDIzam5VZ3c3Zjh1K0p0Wk5Nb1MzdlFLRmNLRDZxNHptOVJnZ0pQb1NsdWx0TXJNMDN1MmdnRVJocG4xc3AwK0hackUxaVZNRjY5OGs3WWhWS0szaWtRdWFKVTdlRW1OVjdyRE1iWHFieUJpSHZJcVA5OFNnTWFBbnBDM2V1RWVycUlxQ1dEbmNZbVMranplWWRlV3NMLzUvbXQ1OXhnTDhyYUY1NE80bFNKRE1UREVRYXVZMkZYRmxGeCt2UHRlb1g0STdPUDc5eThjUTJVT3FrQ2E2aFVKUzdjWVNib3RCRFg4dm5aQVZjbWRtc3BrNHFyR3EzUWZXR0pHSDdHT2NKcGgxdmFzOXVoaXhROGxUNmphR0UwTlhqZms4elc2MjdwaE5sNktFL3RIZ2RLUTZMWW4xRkIxN1JsVnhiVy8vK2NocHAzRTNQUTY3dGs5MmxUTExXayt6ZWxLd0lpcXhGSkRhbm01NjZKRUkydlg5SUZxY0FhaXpyd0lQa0o4ZmVkRzQvNzRUemxjUXQ1bmNDa3dyY0dGcjBSTXlJaEJBQ1ZxWkVPZnVNeWgrODdybTFGeDN6QTNoMG5PbHZTeC83N09xazdsNkpmY29tbGVsckFZYmJZbDdNR0t3ZVRWNW5YaHRiZjZGZ3I4bmhEMGZpd3BkL1ZPRWd0Vk0rNnp6QXlsem5XckdJSzB6cENKandYNnZnMHZzQldUS0xzeklEQkY3ODhtOHgxUW9NMC9FZVlTQUR4MEpHTEo5d1p2MVpIVGhYUTF5RnlCWjYrR3ZZPTwvWDUwOUNlcnRpZmljYXRlPjwvWDUwOURhdGE+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvQ0ZlPg==";
		try {
			String dec 		= HandleFiles.decodeBase64(valueBase64);
			String decExpc  = "<CFe><infCFe Id=\"CFe35160608723218000186599000025910004896282705\" versao=\"0.06\" versaoDadosEnt=\"0.06\" versaoSB=\"010101\"><ide><cUF>35</cUF><cNF>628270</cNF><mod>59</mod><nserieSAT>900002591</nserieSAT><nCFe>000489</nCFe><dEmi>20160610</dEmi><hEmi>114344</hEmi><cDV>5</cDV><tpAmb>2</tpAmb><CNPJ>16716114000172</CNPJ><signAC>SGR-SAT SISTEMA DE GESTAO E RETAGUARDA DO SAT</signAC><assinaturaQRCODE>zioUNwDCc2xSkzxzAHkCqtwSTtF/PfA9VznbaS8aaFFkZnQ5fvaoWVJE9LfLdDsFR/h2TVDS7NILkNXzagUWKPZoW/zxuecrak9t4KWO7mPi6H6UacqU3kiYBlaEQepTUqQrJ8USnndzoPXRm+k0DE+lvHw1B4ptDrnqAxaFpvWl0qn24XmjjqLl495EGxID59+lupDTmThNpL3wp79Me87NtYDkEGAX37e4j4DDprap4vFtK1/f2tArd36sGhC2ZCRr/bpaP+ZA3kqkKQH2ANZrGjYCsVeQUPmAhrj0pJYA/N1WzXL7QA7gJtnxjcRzwNvDyNQyMel8NbvzS7RX8g==</assinaturaQRCODE><numeroCaixa>001</numeroCaixa></ide><emit><CNPJ>08723218000186</CNPJ><xNome>TANCA INFORMATICA EIRELI</xNome><xFant>TANCA</xFant><enderEmit><xLgr>RUA ENGENHEIRO JORGE OLIVA</xLgr><nro>73</nro><xBairro>VILA MASCOTE</xBairro><xMun>SAO PAULO</xMun><CEP>04362060</CEP></enderEmit><IE>149626224113</IE><IM>123456789</IM><cRegTrib>3</cRegTrib><cRegTribISSQN>1</cRegTribISSQN><indRatISSQN>N</indRatISSQN></emit><dest><CNPJ>46541673000150</CNPJ><xNome>RAZAO SOCIAL</xNome></dest><entrega><xLgr>Logradouro</xLgr><nro>123</nro><xCpl>complemento</xCpl><xBairro>Bairro</xBairro><xMun>Municipio</xMun><UF>CE</UF></entrega><det nItem=\"1\"><prod><cProd>0090980</cProd><xProd>PROD HOMOLOG</xProd><NCM>01031000</NCM><CFOP>5102</CFOP><uCom>UN</uCom><qCom>1.0000</qCom><vUnCom>10.99</vUnCom><vProd>10.99</vProd><indRegra>A</indRegra><vItem>10.99</vItem><vRatDesc>0.00</vRatDesc><vRatAcr>0.00</vRatAcr></prod><imposto><vItem12741>2.50</vItem12741><ICMS><ICMS00><Orig>0</Orig><CST>00</CST><pICMS>5.33</pICMS><vICMS>0.59</vICMS></ICMS00></ICMS><PIS><PISAliq><CST>01</CST><vBC>10.99</vBC><pPIS>0.1700</pPIS><vPIS>1.87</vPIS></PISAliq></PIS><COFINS><COFINSAliq><CST>01</CST><vBC>10.99</vBC><pCOFINS>0.0900</pCOFINS><vCOFINS>0.99</vCOFINS></COFINSAliq></COFINS></imposto><infAdProd>Informacao adicional</infAdProd></det><total><ICMSTot><vICMS>0.59</vICMS><vProd>10.99</vProd><vDesc>0.00</vDesc><vPIS>1.87</vPIS><vCOFINS>0.99</vCOFINS><vPISST>0.00</vPISST><vCOFINSST>0.00</vCOFINSST><vOutro>0.00</vOutro></ICMSTot><vCFe>10.99</vCFe><vCFeLei12741>1.05</vCFeLei12741></total><pgto><MP><cMP>01</cMP><vMP>10.99</vMP></MP><vTroco>0.00</vTroco></pgto><infAdic><obsFisco xCampo=\"xCampo1\"><xTexto>xTexto1</xTexto></obsFisco></infAdic></infCFe><Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"></CanonicalizationMethod><SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"></SignatureMethod><Reference URI=\"#CFe35160608723218000186599000025910004896282705\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"></Transform><Transform Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"></Transform></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"></DigestMethod><DigestValue>/S5izbCsD3q8+mGVbaJku8XWWMHBMQTIBLv1FQxtBBk=</DigestValue></Reference></SignedInfo><SignatureValue>VtJxTxQC3W3MjOBId6/SBZrJPC9NVlKq78fYKjSKte/xXADfvfGUK84/hB7HAeagWDXxdvjlo0CTz8Nrk3Lrfvw76svEBtmt6eC8VnnqV37N0byrqsz8FQoEvi++qaqQMPK4htwbroX90VMsBTxKdmlGdQ2YbBR0OLbOHPn++XVG6D33JH1+m1ky7xVETt6yPEkbuTWBtdXoa9BaGicxwSwoheevchessE6MF/9kBgQ6rSrGWkJNQi39rKmuYE9dH2dZWEg05jrgZ+9S3j8TnHsPrQKvtY+SrqMlcWkd/8akjpMwnEXE0Kt4oYse3RrnlXo4kXiwj4mW/x8nRKMqxw==</SignatureValue><KeyInfo><X509Data><X509Certificate>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</X509Certificate></X509Data></KeyInfo></Signature></CFe>";	
			assertEquals(decExpc, dec);
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			fail(e.getMessage());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			fail(e.getMessage());
		}
	}
	
	@Test
	public void testDateFormat() {
		HandleDateHour hDate = new HandleDateHour();
		String dateAct = hDate.format(new Date(1465590657898L), "yyyyMMdd");
		String dateExp = "20160610"; 
		assertEquals("Data formatada " + dateAct + " nao confere.", dateExp, dateAct);
		dateAct = hDate.format(new Date(1465590657898L), "yyyyMMddHHmmssSS");
		dateExp = "20160610173057898";
		assertEquals("Data formatada " + dateAct + " nao confere.", dateExp, dateAct);
		dateAct = hDate.format(new Date(1465590657898L), "yyyyMMdd HHmmssSS");
		dateExp = "20160610 173057898";
		assertEquals("Data formatada " + dateAct + " nao confere.", dateExp, dateAct);
		dateAct = hDate.format(new Date(1465590657898L), "dd/MM/yyyy HH:mm:ss:SS");
		dateExp = "10/06/2016 17:30:57:898";
		assertEquals("Data formatada " + dateAct + " nao confere.", dateExp, dateAct);
	}
	
}
